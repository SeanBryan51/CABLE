{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the CABLE Land Surface Model documentation","text":"<p>This site is generated from a GitHub repository which consists of documentation in markdown files contained in the <code>documentation/docs</code> sub-directory, which are rendered using mkdocs and material. </p> <p>There is also full API documentation, which is automatically generated by FORD from the CABLE source code contained in the <code>src</code> directory. </p>"},{"location":"developer_guide/","title":"Developer guide","text":"<p>CABLE is a community model and, as such, we welcome contributions from anyone in the community.</p> <p>The CABLE code and documentation are hosted on GitHub. Guidelines are given here to use Git and GitHub for CABLE's work. If you are new to Git and GitHub, you might find it useful to follow a Git/GitHub tutorial in addition (e.g The Carpentries training).</p> Code changes are currently not accepted <p>Although one can find the source code for CABLE in this repository, we do not accept any code changes other than documentation at the moment. Please use the CABLE SVN repository for code modifications.</p> <p>We recommend you become a member of the CABLE-LSM GitHub organisation if you want to contribute to CABLE. This guide assumes you are a member of the organisation in its instructions.</p> <p>We also ask that you become familiar with this developer guide. It contains important information on:</p> <ul> <li>the workflow to follow to contribute</li> <li>the structure of the documentation and source code</li> <li>the required standards for both the code and the documentation</li> </ul>"},{"location":"developer_guide/api/","title":"API documentation","text":"<p>The API documentation for CABLE is hosted here.</p>"},{"location":"developer_guide/coding_standards/","title":"Coding standards","text":""},{"location":"developer_guide/contribution_flowchart/","title":"Flowchart to contribute to CABLE's documentation","text":"<p>This workflow assumes you have followed all the steps to setup Git and GitHub given by ACCESS-NRI. You can also use this cheat sheet for a quick reference to the main Git commands to use.</p> <p>This first flowchart explains what we are trying to do. The following flowcharts go into the details, including the various git commands needed. All the git commands listed are to be run in a terminal on the machine you are working on.</p> <pre><code>   flowchart TD\n\n   Idea[Explain your work in an issue]\n   Workspace[Create a workspace for you in the repository]\n   Work[Do your work and record it]\n   Check[Check your work when rendered &lt;br&gt; and merged with the main deployment]\n   Review[Get a review on your work]\n   Merge[Merge final version into the main deployment]\n   FinalUpdate[Update your local copy &lt;br&gt; to be ready for your next piece of work]\n\n   Idea --&gt; Workspace --&gt; Work --&gt; Check;\n   Check --&gt;|Incorrect|Work;\n   Check --&gt;|Correct|Review;\n   Review --&gt;|Apply requested changes|Work;\n   Review --&gt;|Approved|Merge --&gt; FinalUpdate;\n\n   linkStyle 3 stroke:red,color:red;\n   linkStyle 4 stroke:green,color:green;\n   linkStyle 5 stroke:red,color:red;\n   linkStyle 6 stroke:green,color:green;\n;</code></pre>"},{"location":"developer_guide/contribution_flowchart/#legend-for-the-flowcharts","title":"Legend for the flowcharts","text":"<pre><code>   %% Create a graph for the legend of the main graph\n   flowchart LR\n      uniq[action done &lt;br&gt; only once ever &lt;br&gt; at the start &lt;br&gt; to get the code locally]:::uniq;\n      sevterm[action done &lt;br&gt; several times per issue &lt;br&gt; in a terminal/text editor]:::term;\n      sevgit[action done &lt;br&gt; several times per issue &lt;br&gt; on GitHub]:::github;\n      onceterm([action done &lt;br&gt; once per issue &lt;br&gt; in a terminal/text editor]):::term;\n      oncegit([action done &lt;br&gt; once per issue &lt;br&gt; on GitHub]):::github;\n      question[\\question with multiple outcomes/]:::question;\n\n      uniq --- sevterm --- sevgit --- question;\n      uniq --- onceterm --- oncegit --- question;\n\n      classDef default fill:#FFFDE7, stroke:#FFF59D;\n      classDef uniq fill:#D81B60, stroke:#880E4F, color:#FFFFFF;\n      classDef github fill:#388E3C,stroke:#1B5E20, color:#FFFFFF;\n      classDef term fill:#F44336, stroke:#B71C1C, color:#FFFFFF;\n      classDef question fill:#6D4C41, stroke:#3E2723, color:#FFFFFF; \n;</code></pre>"},{"location":"developer_guide/contribution_flowchart/#setup-for-new-piece-of-work","title":"Setup for new piece of work","text":"<pre><code>   flowchart TB\n\n      %% Define all the nodes first\n      clone[Clone repository]:::uniq ;\n      issue([Open an issue &lt;br&gt; to explain your work]):::github;\n      locbranch([\"Create local branch: &lt;br&gt; git checkout &amp;lt;branchname&amp;gt;\"]):::term;\n      work[Ready to start work];\n\n      clone --&gt; issue --&gt; locbranch--&gt; work;\n\n      classDef default fill:#FFFDE7, stroke:#FFF59D;\n      classDef uniq fill:#D81B60,stroke:#880E4F,color:#FFFFFF;\n      classDef github fill:#388E3C,stroke:#1B5E20,color:#FFFFFF;\n      classDef term fill:#F44336,stroke:#B71C1C,color:#FFFFFF;\n      classDef question fill:#6D4C41,stroke:#3E2723,color:#FFFFFF; \n\n      click work \"https://cable-lsm.github.io/CABLE/developer_guide/contribution_flowchart/#do-and-record-your-work\" \"Doing work flowchart\"\n;</code></pre>"},{"location":"developer_guide/contribution_flowchart/#clone-repository","title":"Clone repository","text":"<p>On CABLE's GitHub main page, click the <code>code</code> green button and copy the URL you need:</p> <p></p> <p>Make sure to choose the appropriate protocol (HTTPS or SSH) for connecting to the remote repository. Note, you need to setup an access token to use HTTPS and SSH keys to use SSH.</p> <p>On your local machine in a terminal, clone the repository:</p> <pre><code>git clone &lt;URL provided&gt;\n</code></pre>"},{"location":"developer_guide/contribution_flowchart/#open-issue","title":"Open issue","text":"<p>Before starting new work, open an issue on GitHub to explain what you are planning on working on. This avoid potential duplication of effort.</p>"},{"location":"developer_guide/contribution_flowchart/#create-the-local-branch","title":"Create the local branch","text":"<p>You want to create a branch for your work, that's your workspace within the shared repository. For this, in a terminal on your machine, use <code>git checkout</code> with the name of the branch you want:</p> <pre><code>git checkout &lt;branchname&gt;\n</code></pre> Branch name <p>It is best to start the branch name with the issue number so the link between the two is obvious.</p>"},{"location":"developer_guide/contribution_flowchart/#do-and-record-your-work","title":"Do and record your work","text":"<pre><code>   flowchart TB\n\n      edits[Make your edits]:::term;\n      add[\"Add your edits to git's index: &lt;br&gt; git add .\"]:::term;\n      commit[\"Commit your edits: &lt;br&gt; git commit\"]:::term;\n      push[Push your edits &lt;br&gt; git push]:::term;\n      pr([Create a pull request]):::github;\n      preview[\\Is preview correct?/]:::question;\n      review[Ready for review];\n\n      edits --&gt; add --&gt; commit --&gt; push;\n      push --&gt; |first time|pr --&gt; preview;\n      push ----&gt; |subsequent|preview;\n      preview --&gt;|Yes|review;\n      preview --&gt;|No|edits;\n\n      classDef default fill:#FFFDE7, stroke:#FFF59D;\n      classDef uniq fill:#D81B60, stroke:#880E4F, color:#FFFFFF;\n      classDef github fill:#388E3C,stroke:#1B5E20, color:#FFFFFF;\n      classDef term fill:#F44336, stroke:#B71C1C, color:#FFFFFF;\n      classDef question fill:#6D4C41, stroke:#3E2723, color:#FFFFFF; \n\n      linkStyle 7 stroke:red,color:red;\n      linkStyle 6 stroke:green,color:darkgreen;\n\n      click review \"https://cable-lsm.github.io/CABLE/developer_guide/contribution_flowchart/#review\" \"Review process\"\n\n;</code></pre>"},{"location":"developer_guide/contribution_flowchart/#commit-your-edits","title":"Commit your edits","text":"<p>You need to record your edits in git, this is called <code>commit</code>. It is recommended to do this regularly as it gives some safety to reverse changes. In Git, this is a 2-step process with a first step to add what you want to commit to the index and then commit what is in the index.</p> <pre><code>git add .\ngit commit\n</code></pre> <p>Then please add an informative message in the editor that opens automatically. Remember that Git records the date and time as well as the author of the commit, these do not need to be repeated in the message. The message gives information on the nature of the changes.</p>"},{"location":"developer_guide/contribution_flowchart/#push-your-edits-to-the-remote-repository","title":"Push your edits to the remote repository","text":"<p>It is recommended to push your changes back to the remote repository often as it provides a backup of the work, the ability to work from different computers and makes it easier to collaborate on some development:</p> <pre><code>git push\n</code></pre> <p>The first time you push back some work on a branch, consider opening a pull request. This allows potential collaborators or helpers to find your work easily.</p> <p></p> <p>You can update the pull request by simply pushing more commits to the same branch.</p>"},{"location":"developer_guide/contribution_flowchart/#check-the-preview","title":"Check the preview","text":"<p>The pull request will build a preview of your work merged with the main branch of the repository. Please check that your work is rendered correctly. Once a preview is ready, you will see the following comment in the pull request providing the path to the preview:</p> <p></p> <p>To preview changes to the API documentation (ie. documentation in the CABLE source code), you need to append <code>/api</code> to the path provided.</p>"},{"location":"developer_guide/contribution_flowchart/#review","title":"Review","text":"<p>All modifications to the documentation no matter how large or small need to be reviewed by another CABLE collaborator.</p> <pre><code>   flowchart TB\n\n      %% Define all the nodes first\n      review[Request review]:::github;\n      update[Pull updates to your branch to your local repository: &lt;br&gt; git pull]:::term;\n      merge([Merge branch]):::github;\n      updatemain([Sync your local repository with the remote: &lt;br&gt; git checkout main &lt;br&gt; git pull]):::term;\n      edits[Back to editing your branch];\n      delete([Delete the branch on GitHub]):::github;\n\n      %% Define the graphs using the nodes' names\n      review --&gt; |Need to put code changes|update --&gt; edits;\n      review --&gt;|Approved|merge;\n      merge --&gt; delete --&gt; updatemain;\n\n      classDef default fill:#FFFDE7, stroke:#FFF59D;\n      classDef uniq fill:#D81B60, stroke:#880E4F, color:#FFFFFF;\n      classDef github fill:#388E3C,stroke:#1B5E20, color:#FFFFFF;\n      classDef term fill:#F44336, stroke:#B71C1C, color:#FFFFFF;\n      classDef question fill:#6D4C41, stroke:#3E2723, color:#FFFFFF; \n\n      linkStyle 0 stroke:red,color:red;\n      linkStyle 2 stroke:green,color:darkgreen;\n      linkStyle 1 stroke:red,color:red;\n      linkStyle 3 stroke:green;\n      linkStyle 3 stroke:green;\n\n      click edits \"https://cable-lsm.github.io/CABLE/developer_guide/contribution_flowchart/#do-and-record-your-work\" \"Doing work flowchart\"\n\n;</code></pre>"},{"location":"developer_guide/contribution_flowchart/#ask-for-review","title":"Ask for review","text":"<p>Once you are satisfied with your work, ask for a review. By putting a submission in, you are responsible for being responsive to any comments or edit changes suggested by the reviewer. Remember your work will not be accepted into the main deployment branch until a reviewer approves it.</p> <p>The reviewer might make code changes suggestions. It is recommended to accept all the suggestions you agree with first and then, work on your local copy for any additional required modifications.</p> <p>If you need to ask for a second review from the same reviewer, in the reviewer's list, click on the icon for this purpose.</p>"},{"location":"developer_guide/contribution_flowchart/#merge-your-branch","title":"Merge your branch","text":"<p>Once the reviewer(s) has(have) accepted your changes, you can merge your work into the main branch. Feel free to choose the merge method you prefer. \"Merging\" is the simplest and should be used if you don't understand what the other methods do.</p>"},{"location":"developer_guide/contribution_flowchart/#delete-the-branch","title":"Delete the branch","text":"<p>Once the branch has been merged with main, make sure to delete the branch and start any other piece of work from a different branch. Deleting the branch can be done from GitHub and the pull request screen.</p>"},{"location":"developer_guide/contribution_flowchart/#update-your-local-repository","title":"Update your local repository","text":"<p>Finally, don't forget to update your local repository to sync the main branch with the state of the remote repository. For this, you need to checkout main and then pull from the remote repository:</p> <pre><code>git checkout main\ngit pull\n</code></pre> <p>At this stage, you can also delete your local branch which has become unnecessary:</p> <pre><code>git branch --delete &lt;branchname&gt;\n</code></pre>"},{"location":"developer_guide/git_process/","title":"Process to develop and submit new features","text":"<p>This process is the same for any submission to be made to CABLE:</p> <ul> <li>a bug fix</li> <li>a new feature for CABLE with its documentation</li> <li>a change in the documentation only</li> <li>etc.</li> </ul> <p>Since the source code and the documentation are held in text files in the same repository, the process for updating them is the same. </p> <p>Developers should submit updates to the documentation when they submit updates to the source code. Submissions with changes to the source code that do not contain appropriate documentation updates will not be accepted, and the author will be asked to add documentation.</p>"},{"location":"developer_guide/release/","title":"CABLE's release process","text":""},{"location":"developer_guide/documentation_guidelines/","title":"Documentation guidelines","text":"<p>First of all, you should become a member of the CABLE-LSM GitHub organisation prior to contribute to the CABLE's documentation. Please ask for membership on this issue. All guidelines and implementation details are written with the assumption you are a member of the organisation.</p> <p>The documentation for CABLE has two parts:</p> <ul> <li>inline documentation in the source code. This documentation includes the detailed scientific documentation. It is written using FORD.</li> <li>the standalone guides such as the User Guide and the Developer Guide. It is written using Material for MkDocs.</li> </ul> <p>Both tools use Markdown and LaTeX Mathematics for formatting. </p>"},{"location":"developer_guide/documentation_guidelines/#documentation-workflow","title":"Documentation workflow","text":"<p>All documentation is located in the CABLE GitHub repository. To update the documentation, you need to follow a traditional GitHub contribution process: open an issue and a new branch; work on your changes; submit a pull request for review before publication. The process is explained in more details on this page.</p>"},{"location":"developer_guide/documentation_guidelines/#scientific-documentation","title":"Scientific documentation","text":"<p>The scientific documentation should be added directly into the source code available under the <code>src/</code> directory. Please use these guidelines to structure the documentation. You can find a cheatsheet for FORD on this page.</p> No code changes please <p>Currently, the CABLE code under <code>src/</code> is only for documentation purposes. All code changes should go on the SVN repository. Any code change submitted in the GitHub repository will be discarded at this stage. Only changes to comments for documentation will be accepted.</p>"},{"location":"developer_guide/documentation_guidelines/#other-documentation","title":"Other documentation","text":"<p>Other documentation such as the User guide and Developer guide are located under the <code>documentation/docs/</code> folder. Each file corresponds to a page on the rendered documentation and each folder corresponds to a tab or a section. Folders and files are named very similarly to the sections and pages on the documentation website to help navigation when developing the documentation. To help you find the file corresponding to a page, on the rendered documentation website, you can click on the pen icon  at the top right. This will open the corresponding file in GitHub and show you the path to the file. If you need more help to contribute to the User guide or the Developer guide, please use the contribution guide for ACCESS-Hive.</p>"},{"location":"developer_guide/documentation_guidelines/cheat_sheets/","title":"Cheat sheets","text":""},{"location":"developer_guide/documentation_guidelines/cheat_sheets/#git","title":"Git","text":"<p>A minimum set of git commands used in the workflow for CABLE is given in the following table:</p> Command Description git clone &lt;URL&gt; create a working copy of a remote repository git checkout &lt;branchname&gt; Switch to a different branch  creates the branch if it does not exist git add &lt;filenames&gt; Add files with modifications and new files to the index before committing to git git commit Commit the index. You need to add an informative comment git push Send your local changes to the remote repository git pull Update your checkout branch with the state on the remote repository git branch -d &lt;branchname&gt; Delete a local branch. You need to have a different branch  currently checked out <p>Additional commands and information can be found in this \"simple guide\"</p>"},{"location":"developer_guide/documentation_guidelines/cheat_sheets/#ford","title":"FORD","text":"<p>For details about the configuration or more explanation of the syntax, please refer to the full documentation for FORD.</p> <p>This cheat-sheet is intended for use for the documentation of the CABLE land surface model and focuses on the features needed for that purpose.</p> Syntax Description <code>!!</code> Comment line for documentation  after the code to document <code>!*</code> Block of comments for documentation  after the code to document <code>!&gt;</code> Comment line for documentation  before the code to document <code>!|</code> Block of comments for documentation  before the code to document <code>\\(...\\)</code> Inline mathematics notation <code>\\[...\\]</code> Mathematics notation on its own line <code>\\begin{equation}...\\end{equation}</code> Numbered equation on its own line"},{"location":"developer_guide/documentation_guidelines/cheat_sheets/#markdown","title":"Markdown","text":"<p>For a quick reference to Markdown, please use this cheat sheet.</p>"},{"location":"developer_guide/documentation_guidelines/science_doc/","title":"Guidelines for the scientific documentation","text":"<p>The scientific documentation must be written inline in the source code. Each of the following components:</p> <ul> <li>subroutine</li> <li>function</li> <li>interface</li> <li>derived type declaration</li> <li>non-dummy variable or array declaration</li> </ul> <p>must be accompanied by a comment describing the related science.</p> <p>The inline documentation is processed by FORD which supports formatting with Markdown.</p>"},{"location":"developer_guide/documentation_guidelines/science_doc/#minimum-requirements","title":"Minimum requirements","text":"<p>At a minimum a subroutine, function, or interface must contain the following standard header template just underneath the first defining line:</p> <pre><code>!*## Purpose\n!\n! Just underneath the first line defining a procedure, start with a \n! description of the procedure's purpose in English. \n!\n!## Method\n!\n! Include what quantity(ies) the procedure is calculating and a short \n! description of the relationship between the outputs and the inputs.\n! It is fine to refer to a published paper as the explanation of the \n! relationship (e.g. \"following Wang and Leuning, 1998\"). \n!\n! Mention all scientific methods used in the procedure. \n!\n! **Warning**: Highlight any code deficiency (bug, incompatibilities, \n! refactoring needs, etc.) in a **Warning** section. Use strong \n! emphasis on \"Warning\". \n!\n! Avoid using abbreviations (e.g. write \"maximum\" not \"max.\").\n! \n! Remember to keep all lines within 80 columns width, except hyperlinks\n!\n!## References\n!\n! Add references to the published papers containing the description of \n! the science and equations used in the procedure. \n!\n! The references should show the name of the authors and the publication \n! year in the rendered text (e.g. \"Wang and Leuning, 1998\") and be a hyperlink\n! to the paper using the DOI link as follows:\n!\n! [Wang and Leuning, 1998](https://doi.org/10.1016/S0168-1923(98)00061-6)\n!\n! Do not use the citation text! It is too long and unnecessary since we have DOI hyperlinks.\n!\n</code></pre>"},{"location":"developer_guide/documentation_guidelines/science_doc/#modules-header","title":"Modules header","text":"<p>Start with a short overview of the purpose of the module. You can keep it quite short as the details (references, implementation, equations etc.) will go in each subroutine within the module.</p>"},{"location":"developer_guide/documentation_guidelines/science_doc/#procedure-arguments-and-public-module-variables","title":"Procedure arguments and public module variables","text":"<ul> <li>Add a description for each argument at the end of the line or on the line after the argument declaration</li> <li>If the argument is the direct equivalent of a variable in an equation in a published paper, add the symbol used in the equation (using LaTeX Maths) and the reference, if it's ambiguous, after the description within parentheses</li> <li>Add the unit at the end of the description within parentheses. Use LaTex Maths to format superscripts and subscripts. The unit should be the last item in the description line</li> </ul>"},{"location":"developer_guide/documentation_guidelines/science_doc/#example-of-minimum-requirements","title":"Example of minimum requirements","text":"<pre><code>MODULE MIN_DOC_EXAMPLE\n!! This module is to show how to write a minimum documentation\n!! for CABLE.\n\nIMPLICIT NONE\n\nCONTAINS\n    SUBROUTINE SUB1_EXAMPLE(myarg)\n!!## Purpose\n!!\n!! This subroutine only serves to show the minimum documentation.  \n!!\n!!## Method\n!!\n!! It writes the argument to the standard output.\n!!\n!! **Warning**: This subroutine seems useless and should be removed.\n!! \n!!## References\n!!\n!! The minimum requirements for documentation are taken from:  \n!! [CABLE developer guide](https://cable-lsm.github.io/CABLE/developer_guide/doc_guide/science_doc/)\n\n! Arguments\nINTEGER, INTENT(IN) :: myarg !! Example argument to show the documentation (-)\n\n! Write the argument as-is to standard output\nPRINT*, myarg\n\nEND SUBROUTINE SUB1_EXAMPLE\nEND MODULE MIN_DOC_EXAMPLE\n</code></pre>"},{"location":"developer_guide/documentation_guidelines/science_doc/#optional-information-to-include","title":"Optional information to include","text":"<p>There is obviously a lot of additional information that can be included with the documentation and it highly depends on the procedure or derived type that is being documented. Below are some ideas but the list is not exhaustive.</p> <ul> <li> <p>Headings and special formatting. It is possible to use Markdown to format the documentation. For example, one can add headings or lists.</p> <p>For procedures and derived types, do not use level-1 headings as these are used for the procedure declaration line or the derived type declaration.</p> </li> <li> <p>Equations. You can insert equations with LaTeX Mathematics notations</p> </li> <li>Order of procedure. You may want to explain the successive steps of the code. When doing so it might be useful to:<ul> <li>use unordered or ordered lists</li> <li>place the list items for each step throughout the code before the code it refers too. Doing so, the code comments  can then easily be used for the documentation as well. </li> </ul> </li> </ul>"},{"location":"developer_guide/documentation_guidelines/science_doc/#example-of-more-complex-documentation","title":"Example of more complex documentation","text":"<pre><code>MODULE EXTENSIVE_DOC_EXAMPLE\n!*# Overview \n! This module is to show how to write more extensive documentation for CABLE.  \n! It is using Markdown to format the documentation which is supported by FORD.\n\nIMPLICIT NONE\n\nCONTAINS\n    SUBROUTINE SUB1_EXAMPLE(myarg)\n!*## Purpose\n!\n! This subroutine only serves to show some more extensive documentation.  \n! \n!## Method\n!\n! The subroutine takes a float as input, prints its value then adds 2/3, \n! prints it and returns it. \n! \n! The equation used is:\n! \\[ myarg = myarg + !frac{2.}{3.} \\]\n!\n!## References\n!\n! The guidelines for documentation can be found in:  \n! [CABLE developer guide](https://cable-lsm.github.io/CABLE/developer_guide/doc_guide/science_doc/)\n!\n\n! Arguments\nREAL, INTENT(INOUT) :: myarg !! Example argument to show the documentation (-)\n\n!&gt;## Order of procedure\n!&gt; 1. Start an ordered list for my documentation.\nPRINT*, myarg\n\n!&gt; 2. Continue the same list. The numbering is important here.\nmyarg = myarg + 2./3.\n\n!&gt; 3. Place each comment before the line of code it refers to.\nPRINT*, myarg\n\nEND SUBROUTINE SUB1_EXAMPLE\nEND MODULE MIN_DOC_EXAMPLE\n</code></pre>"},{"location":"developer_guide/obsolete_and_deprecated_features/obsolete_and_deprecated_features/","title":"Obsolete and deprecated features for CABLE developers","text":"<p>The obsolete developer features described here were at some point coded in previous versions of CABLE before they became deprecated and were subsequently removed from the code. Coding with the deprecated developer features described here is discouraged as they are scheduled to become obsolete and removed from future versions of the CABLE code. Development that includes any deprecated or obsolete features will require modifications  before being accepted for a CABLE release.</p> <p>Other content of potential interest: obsolete and deprecated user features</p>"},{"location":"developer_guide/obsolete_and_deprecated_features/obsolete_and_deprecated_features/#obsolete-developer-features","title":"Obsolete developer features","text":"<p>Enter obsolete developer features in the table below:</p> Feature name  Removal reason  Replacement? CABLE version Pull Request exact feature syntax short deprecation reason current alternative if any version number #pull request number exact feature syntax short deprecation reason current alternative if any version number #pull request number"},{"location":"developer_guide/obsolete_and_deprecated_features/obsolete_and_deprecated_features/#deprecated-developer-features","title":"Deprecated developer features","text":"<p>Enter deprecated developer features in the table below:</p> Feature name  Deprecation reason  Replacement? CABLE version Pull Request exact feature syntax short deprecation reason current alternative if any version number #pull request number exact feature syntax short deprecation reason current alternative if any version number #pull request number"},{"location":"how-to/1D/","title":"Working with 1D arrays on land points only","text":""},{"location":"how-to/input_fields/","title":"How to prepare input files for CABLE","text":""},{"location":"user_guide/","title":"User Guide","text":"<p>In the user guide, you will find:</p> <ul> <li>a quick guide to install and run the CABLE tutorial.</li> <li>a more complete guide with full explanations to install, run, customise a CABLE simulation and understand the output from CABLE.</li> </ul>"},{"location":"user_guide/installation/","title":"Installation instructions","text":"<p>To install CABLE you need to have the following already installed on your system:</p> <ul> <li>SVN</li> <li>a Fortran compiler</li> <li>the netCDF library</li> </ul>"},{"location":"user_guide/installation/#flowchart-of-the-installation","title":"Flowchart of the installation","text":"<pre><code>graph TD\n\n    A(Checkout CABLE with SVN):::UserAction --&gt;|Serial?| B(Run `offline/build3.sh`):::UserAction;\n    B --&gt; D[load modules, set compiler flags, create .tmp/ directory];\n    D --&gt;|Serial?| E[Run `serial_cable`];\n    E --&gt; G[executable `cable`]:::Output;\n    A --&gt;|Parallel?| C(Run `offline/build3.sh mpi`):::UserAction;\n    C --&gt; D;   \n    D --&gt;|Parallel?| F[Run `parallel_cable`];\n    F --&gt; H[executable `cable_mpi`]:::Output;\n    click A \"http://cable-lsm.github.io/CABLE/user_guide/installation/#getting-the-cable-source-code\"\n    click B \"http://cable-lsm.github.io/CABLE/user_guide/installation/#launching-the-build\"\n    click C \"http://cable-lsm.github.io/CABLE/user_guide/installation/#launching-the-build\"\n    click D \"http://cable-lsm.github.io/CABLE/user_guide/installation/#description-of-the-build-process\"\n    click E \"http://cable-lsm.github.io/CABLE/user_guide/installation/#description-of-the-build-process\"\n    click F \"http://cable-lsm.github.io/CABLE/user_guide/installation/#description-of-the-build-process\"\n\n    UserAction ---- Automatic ---- Output;\n\n    UserAction(Actions from the user):::UserAction;\n    Automatic(Automatic steps of the build script);\n    Output(Output of the build script):::Output;\n\n    classDef UserAction fill:#FEFB8E\n    classDef Output fill:#cefe8e</code></pre>"},{"location":"user_guide/installation/#getting-the-cable-source-code","title":"Getting the CABLE source code","text":"<p>CABLE can be downloaded from the subversion repository hosted at NCI once a user has requested admission to the CABLE software group at NCI, as described here. To install the latest version of CABLE, you simply need to checkout the <code>trunk</code>:</p> <pre><code>svn checkout https://trac.nci.org.au/svn/cable/trunk\n</code></pre>"},{"location":"user_guide/installation/#building-cable","title":"Building CABLE","text":"<p>In this section, we discuss building CABLE offline for single-site and regional/global applications.</p> <p>In principle, the only requirements for building and running CABLE are a Fortran compiler and a netCDF distribution. However, in reality it is rarely so simple as this makes it sound.</p> <p>Whilst we have endeavoured to make CABLE as portable as possible, and indeed we have used CABLE on a variety of platforms, our discussion here is limited to building CABLE on UNIX/Linux platforms only. Specifically, on Gadi@NCI, using Intel Fortran compiler. On other HPC systems there are likely modules available for both Fortran and netCDF. We recommend to get advice from your local system administrators.</p> <p>CABLE has the directory structure:</p> <pre><code>science/\nutil/\nparams/\noffline/\ncoupled/\n</code></pre> <p>All applications use the <code>science/ util/ params/</code> directories. Offline applications also use the <code>offline/</code> directory. Coupled applications use the <code>coupled/</code> directory instead. We will not discuss the coupled applications any further here. Please refer to the documentation for a specific coupled application with CABLE to learn more.</p>"},{"location":"user_guide/installation/#launching-the-build","title":"Launching the build","text":"<p>CABLE supports both serial and parallel applications.</p> Serial for single-site <p>On a single processor, for single-site investigations with a suitable restart file, CABLE usually executes a year of forcing data in a matter of seconds/minutes. Even in the absence of a restart file, thus requiring spinup of the model, this usually doesn't take more than a few minutes. In this case a serial version of CABLE will suffice.</p> Multiprocessor for global simulations <p>For global (or regional) offline simulations, CABLE can still be run in serial mode (about 15 minutes/year for GSWP global run at 1x1 degree resolution). However, running on multiple processors speeds up the simulation considerably.</p> <p>CABLE can be built using the BASH script build3.sh in the offline/ directory.</p> Build on other HPC <p>The function host_gadi in the build script shows the appropriate configuration to build on Gadi. This may be of use as a template building CABLE on another Linux/HPC system.</p> <p>Both the serial and parallel executable for CABLE offline are built in the <code>offline/</code> directory by executing the build script.</p> <p>To build the serial model execute:</p> <pre><code>./build3.sh\n</code></pre> <p>To build the parallel model execute the same build script but with the argument mpi.</p> <pre><code>./build3.sh mpi\n</code></pre> Warning <p>If you need to switch between a serial compilation and a parallel compilation, you need to completely clean the previous build first.</p>"},{"location":"user_guide/installation/#description-of-the-build-process","title":"Description of the build process","text":"<p>The build script:</p> <ol> <li>loads modules for the Fortran compiler and the netCDF library</li> <li>sets the compiler flags</li> <li>creates a hidden temporary directory (<code>.tmp/</code>) in which it then compiles CABLE.  </li> </ol> <p>A Makefile compiles the CABLE code that is common to both serial and parallel CABLE. This includes all the files under the <code>science/</code>, <code>util/</code>, and <code>params/</code> directories.</p> <p>A serial compilation then calls <code>serial_cable</code> to compile the serial driver and link everything together to produce the executable, <code>cable</code>.</p> <p>A parallel compilation then calls <code>parallel_cable</code> to compile the required MPI driver(s) and link everything together to produce the executable, <code>cable-mpi</code>.</p> <p>The hidden <code>.tmp/</code> directory is really only needed for technical reasons and you should never need to go into the <code>.tmp/</code> directory. However, if for some reason you want the .o object files created by the compiler, they persist in this directory. Alternatively, it is sometimes useful to verify that the files you want to compile are actually making it into this directory. This is particularly relevant if you are adding new files to CABLE.</p> Do not change files under <code>.tmp/</code> <p>If you change the files in <code>.tmp/</code> directly, the next build will not pick up these changes and will overwrite them.</p> <p>One of the features of the build process is that only source files which are modified are re-built, followed by their dependents. This is possible because the <code>.tmp/</code> directory is overwritten by the build script, preserving timestamps of the source files from their original location.</p>"},{"location":"user_guide/installation/#cleaning-the-build","title":"Cleaning the build","text":"<p>From time to time, it might be useful to clean a previous build completely and restart the build from scratch. This is required when switching between serial and parallel builds.</p> <p>To clean the build, you need to run:</p> <pre><code>./build3.sh clean\n</code></pre>"},{"location":"user_guide/uber_quick_guide/","title":"Uber Quick Guide","text":"<p>Assuming you have computing resources on gadi@NCI, installing and running CABLE is as simple as:</p> <ol> <li> <p>Checkout the source code:</p> <pre><code>svn checkout https://trac.nci.org.au/svn/cable/trunk MyCABLE\ncd MyCABLE/offline\n</code></pre> </li> <li> <p>Build a serial version of CABLE</p> <pre><code>./build3.sh\n</code></pre> </li> <li> <p>Execute this serial version of CABLE</p> <pre><code>./cable\n</code></pre> </li> </ol>"},{"location":"user_guide/uber_quick_guide/#in-slightly-more-detail","title":"In slightly more detail","text":"<p>The CABLE executable (./cable) is configured via the namelist cable.nml. By default the provided cable.nml points to 4-year meteorological forcing from the Tumbarumba fluxnet site. NB: spinning up the model has been switched off in cable.nml (spinup=.FALSE.)</p> <p>We say the \"serial\" version as CABLE does support a parallel configuration as well.</p> <p>ACCESS-ESM1.5 uses a version of CABLE based on CABLE-2.3.4.</p> <p>ACCESS-CM2 uses a version of CABLE that is closer to the HEAD of the trunk at the time of writing (December 2019).</p> <p>For a more detailed discussion of CABLE offline please see the other sections of the Cable's User Guide.</p>"},{"location":"user_guide/configurations/config/","title":"Existing configurations for CABLE","text":""},{"location":"user_guide/inputs/cable_nml/","title":"Namelist file cable.nml","text":"<p>The namelist file for CABLE is cable.nml. For offline applications it should be located in the directory in which you are running CABLE. For ACCESS cases, cable.nml should be located in ~/CABLE-AUX/UM on the machine that CABLE is being executed on.</p> <p>The cable.nml file includes some settings that are common across all CABLE applications and others that are required only for offline applications. The following are annotated examples of cable.nml:</p> <p>Note</p> <p>If your namelist file has entries that do not appear here please check the obsolete and deprecated user features page.</p>"},{"location":"user_guide/inputs/cable_nml/#for-offline-applications","title":"For offline applications","text":"<pre><code>&amp;cable\n   filename%met = '/projects/access/CABLE-AUX/offline/TumbaFluxnet.1.3_met.nc'\n   filename%out = 'out_cable.nc'\n   filename%log = 'log_cable.txt'\n   filename%restart_in  = ' '\n   filename%restart_out = './restart_out.nc'\n   filename%type    = '/projects/access/CABLE-AUX/offline/gridinfo_CSIRO_1x1.nc'\n   vegparmnew = .TRUE.  ! using new format when true\n   soilparmnew = .TRUE.  ! using new format when true\n   spinup = .TRUE.  ! do we spin up the model?\n   delsoilM = 0.001   ! allowed variation in soil moisture for spin up\n   delsoilT = 0.01    ! allowed variation in soil temperature for spin up\n   output%restart = .TRUE.  ! should a restart file be created?\n   output%met = .TRUE.  ! input met data\n   output%flux = .TRUE.  ! convective, runoff, NEE\n   output%soil = .TRUE.  ! soil states\n   output%snow = .TRUE.  ! snow states\n   output%radiation = .TRUE.  ! net rad, albedo\n   output%carbon    = .TRUE.  ! NEE, GPP, NPP, stores\n   output%veg       = .TRUE.  ! vegetation states\n   output%params    = .TRUE.  ! input parameters used to produce run\n   output%balances  = .TRUE.  ! energy and water balances\n   check%ranges     = .FALSE.  ! variable ranges, input and output\n   check%energy_bal = .TRUE.  ! energy balance\n   check%mass_bal   = .TRUE.  ! water/mass balance\n   verbose = .TRUE. ! write details of every grid cell init and params to log?\n   leaps = .TRUE. ! calculate timing with leap years?\n   logn = 88      ! log file number - declared in input module\n   fixedCO2 = 350.0   ! if not found in met file, in ppmv\n   spincasa      = .FALSE.     ! spin casa before running the model if TRUE, and should be set to FALSE if spincasainput = .TRUE.\n   l_casacnp     = .FALSE.  ! using casaCNP with CABLE\n   l_laiFeedbk   = .FALSE.  ! using prognostic LAI\n   l_vcmaxFeedbk = .FALSE.  ! using prognostic Vcmax\n   icycle = 0   ! BP pull it out from casadimension and put here; 0 for not using casaCNP, 1 for C, 2 for C+N, 3 for C+N+P\n   casafile%cnpipool='/projects/access/CABLE-AUX/core/biogeochem/poolcnpInTumbarumba.csv'  !\n   casafile%cnpbiome='/projects/access/CABLE-AUX/core/biogeochem/pftlookup_csiro_v16_17tiles.csv'  ! biome specific BGC parameters\n   casafile%cnpepool='poolcnpOut.csv'    ! end of run pool size\n   casafile%cnpmetout='casamet.nc'                ! output daily met forcing for spinning casacnp\n   casafile%cnpmetin=''          ! list of daily met files for spinning casacnp\n   casafile%phen='/projects/access/CABLE-AUX/core/biogeochem/modis_phenology_csiro.txt'        ! modis phenology\n   casafile%cnpflux='cnpfluxOut.csv'\n   ncciy = 0 ! 0 for not using gswp; 4-digit year input for year of gswp met\n   gswpfile%rainf = 'gswp/Rainf_gswp1987.nc'\n   gswpfile%snowf = 'gswp/Snowf_gswp1987.nc'\n   gswpfile%LWdown= 'gswp/LWdown_srb1987.nc'\n   gswpfile%SWdown= 'gswp/SWdown_srb1987.nc'\n   gswpfile%PSurf = 'gswp/PSurf_ecor1987.nc'\n   gswpfile%Qair  = 'gswp/Qair_cru1987.nc'\n   gswpfile%Tair  = 'gswp/Tair_cru1987.nc'\n   gswpfile%wind  = 'gswp/Wind_ncep1987.nc'\n   redistrb = .FALSE.  ! Turn on/off the hydraulic redistribution\n   wiltParam = 0.5\n   satuParam = 0.8\n   cable_user%FWSOIL_SWITCH = 'standard'        ! choices are: 'standard', 'non-linear extrapolation' or 'Lai and Ktaul 2000'\n   cable_user%DIAG_SOIL_RESP = 'ON '\n   cable_user%LEAF_RESPIRATION = 'ON '\n   cable_user%RUN_DIAG_LEVEL= 'BASIC'        ! choices are: 'BASIC', 'NONE'\n   cable_user%CONSISTENCY_CHECK= .TRUE.      ! TRUE outputs combined fluxes at each timestep for comparison to a control run\n   cable_user%CASA_DUMP_READ = .FALSE.      ! TRUE reads CASA forcing from netcdf format\n   cable_user%CASA_DUMP_WRITE = .FALSE.      ! TRUE outputs CASA forcing in netcdf format\n   cable_user%SSNOW_POTEV= 'HDM'      ! Humidity Deficit Method\n&amp;end\n</code></pre> Namelist variable Type Available values Default value Description filename%met character(len=500) any string of max. 500 characters '/projects/access/CABLE-AUX/offline/TumbaFluxnet.1.3_met.nc' Meteorological forcing file filename%out character(len=500) any string of max. 500 characters 'out_cable.nc' Output file filename%log character(len=500) any string of max. 500 characters 'log_cable.txt' Log file filename%restart_in character(len=500) any string of max. 500 characters ' ' Input restart file filename%restart_out character(len=500) any string of max. 500 characters './restart_out.nc' Output restart file filename%type character(len=500) any string of max. 500 characters '/projects/access/CABLE-AUX/offline/gridinfo_CSIRO_1x1.nc' Static information file about grid, soil and vegetation vegparmnew logical .TRUE. .FALSE. .TRUE. Use new format for vegetation parameter files when true soilparmnew logical .TRUE. .FALSE. .TRUE. Use new format for soil parameter files when true spinup logical .TRUE. .FALSE. .TRUE. Spin up the model when .TRUE. delsoilM real any real number 0.001 Allowed variation in soil moisture for spin up delsoilT real any real number 0.01 Allowed variation in soil temperature for spin up output%restart logical .TRUE. .FALSE. .TRUE. Create a restart file when .TRUE. output%met logical .TRUE. .FALSE. .TRUE. Use input meteorological data when .TRUE. output%flux logical .TRUE. .FALSE. .TRUE. Convective, runoff, NEE output%soil logical .TRUE. .FALSE. .TRUE. Use soil states when .TRUE. output%snow logical .TRUE. .FALSE. .TRUE. Use snow states when .TRUE. output%radiation logical .TRUE. .FALSE. .TRUE. Net rad, albedo output%carbon logical .TRUE. .FALSE. .TRUE. NEE, GPP, NPP, stores output%veg logical .TRUE. .FALSE. .TRUE. Vegetation states output%params logical .TRUE. .FALSE. .TRUE. Input parameters used to produce run output%balances logical .TRUE. .FALSE. .TRUE. Energy and water balances check%ranges logical .TRUE. .FALSE. .FALSE. Variable ranges, input and output check%energy_bal logical .TRUE. .FALSE. .TRUE. Energy balance check%mass_bal logical .TRUE. .FALSE. .TRUE. Water/mass balance verbose logical .TRUE. .FALSE. .TRUE. Write details of every grid cell initialisation and parameters to log. leaps logical .TRUE. .FALSE. .TRUE. Calculate timing with leap years? logn integer any integer number 88 Log file number - declared in input module fixedCO2 real any real number 350 CO2 concentration if not found in met file, in ppmv spincasa logical .TRUE. .FALSE. .FALSE. Spin CASA before running the model if TRUE, and should be set to FALSE if spincasainput l_casacnp logical .TRUE. .FALSE. .FALSE. Use CASA-CNP with CABLE l_laiFeedbk logical .TRUE. .FALSE. .FALSE. Use prognostic LAI l_vcmaxFeedbk logical .TRUE. .FALSE. .FALSE. Use prognostic Vcmax icycle integer 0, 1, 2, 3, &gt;10 0 0 for not using casaCNP, 1 for C, 2 for C+N, 3 for C+N+P, &gt;10 excludes call to CBM (main call to cable) casafile%cnpipool character(len=99) any string of max. 99 characters '/projects/access/CABLE-AUX/core/biogeochem/poolcnpInTumbarumba.csv' Initial CNP pools file. casafile%cnpbiome character(len=99) any string of max. 99 characters '/projects/access/CABLE-AUX/core/biogeochem/pftlookup_csiro_v16_17tiles.csv' Biome specific biogeochemical parameters casafile%cnpepool character(len=99) any string of max. 99 characters 'poolcnpOut.csv' End of run pool size casafile%cnpmetout character(len=99) any string of max. 99 characters 'casamet.nc' Output daily met forcing for spinning CASA-CNP casafile%cnpmetin character(len=99) any string of max. 99 characters '' List of daily met files for spinning CASA-CNP casafile%phen character(len=99) any string of max. 99 characters '/projects/access/CABLE-AUX/core/biogeochem/modis_phenology_csiro.txt' Modis phenology casafile%cnpflux character(len=99) any string of max. 99 characters 'cnpfluxOut.csv' Output file for CNP fluxes ncciy integer 0 GSWP year. 0 for not using GSWP; 4-digit year input for year of GSWP meteorological forcing. gswpfile%rainf character(len=200) any string of max. 200 characters 'gswp/Rainf_gswp1987.nc' Input file for rain meteorological forcing. gswpfile%snowf character(len=200) any string of max. 200 characters 'gswp/Snowf_gswp1987.nc' Input file for snow meteorological forcing. gswpfile%LWdown character(len=200) any string of max. 200 characters 'gswp/LWdown_srb1987.nc' Input file for long wave radiation meteorological forcing. gswpfile%SWdown character(len=200) any string of max. 200 characters 'gswp/SWdown_srb1987.nc' Input file for short wave radiation meteorological forcing. gswpfile%PSurf character(len=200) any string of max. 200 characters 'gswp/PSurf_ecor1987.nc' Input file for surface pressure meteorological forcing. gswpfile%Qair character(len=200) any string of max. 200 characters 'gswp/Qair_cru1987.nc' Input file for humidity meteorological forcing. gswpfile%Tair character(len=200) any string of max. 200 characters 'gswp/Tair_cru1987.nc' Input file for temperature meteorological forcing. gswpfile%wind character(len=200) any string of max. 200 characters 'gswp/Wind_ncep1987.nc' Input file for wind meteorological forcing. redistrb logical .TRUE. .FALSE. .FALSE. Turn on/off the hydraulic redistribution. wiltParam real 0.5 Wilt parameter in hydraulic redistribution module. satuParam real 0.8 Saturation parameter in hydraulic redistribution module. cable_user%FWSOIL_SWITCH character 'standard' 'non-linear extrapolation' 'Lai and Ktaul 2000' 'standard' Controls root water uptake function. cable_user%DIAG_SOIL_RESP character(len=3) 'ON ' 'OFF' 'ON ' Controls soil respiration scheme when CASA-CNP not used. cable_user%LEAF_RESPIRATION character(len=3) 'ON ' 'OFF' 'ON ' Controls what is output into the GPP stash variable. cable_user%RUN_DIAG_LEVEL character 'BASIC' 'NONE' 'BASIC' Controls output from CABLE to standard out. cable_user%CONSISTENCY_CHECK logical .TRUE. .FALSE. .TRUE. TRUE outputs combined fluxes at each timestep for comparison to a control run cable_user%CASA_DUMP_READ logical .TRUE. .FALSE. .FALSE. TRUE reads CASA forcing from netcdf format cable_user%CASA_DUMP_WRITE logical .TRUE. .FALSE. .FALSE. TRUE outputs CASA forcing in netcdf format cable_user%SSNOW_POTEV character(len=3) 'HDM' 'P-M' 'HDM' Use the \"Humidity Deficit Method\" or  \"Penman-Monteith\" method"},{"location":"user_guide/inputs/cable_nml/#for-access-applications","title":"For ACCESS applications","text":"<pre><code>&amp;cable\n!!\n!! cable namelist variables applicable to ACCESS/UM runs\n!! default parameter files are available in the following directory on raijin\n!! vegetation parameters in def_veg_params.txt or for vbeta=1 veg_params_vbeta1.txt\n!! vbeta=1 recommended but should be tested for your applications\n!\n  filename%veg     = '/projects/access/CABLE-AUX/core/biogeophys/veg_params_vbeta1.txt'\n!\n!! or checkout to your own area\n! filename%veg     = '~/CABLE-AUX/core/biogeophys/def_veg_params.txt' !relative to your home dir\n!!\n!! soil parameters in def_soil_params.txt. Not used except for isoil=9 (permanent ice) and\n!! rhosoil and css values (isoil=2 used for all non-ice tiles).\n!! Other soil parameters from spatially explicit ancillary files.\n!\n  filename%soil    = '/projects/access/CABLE-AUX/core/biogeophys/def_soil_params.txt'\n!\n! filename%soil    = '~/CABLE-AUX/core/biogeophys/def_soil_params.txt' !relative to your home dir\n!\n!! cable_user flags\n!\n  cable_user%CABLE_RUNTIME_COUPLED = .TRUE. ! controls whether snow initialised if\n                                            ! ktau_gl=1\n                                            ! must be set true for coupled run\n                                            ! use true for atmosphere only runs if\n                                            ! want to take snow from start dump\n                                            ! default is .false.\n  cable_user%FWSOIL_SWITCH = 'standard' ! Controls root water uptake function\n                                        ! choices are:\n                                        ! 'standard'\n                                        ! 'non-linear extrapolation'\n                                        ! 'Lai and Ktaul 2000' NB TYPO IS IN CODE (should be Katul)\n  cable_user%DIAG_SOIL_RESP = 'ON '  ! Controls soil respiration scheme when CASA-CNP not used\n                                     ! 'ON' uses scheme tuned with parameter veg%vegcf\n                                     ! 'OFF' uses scheme tuned with parameter veg%rs20\n  cable_user%LEAF_RESPIRATION = 'OFF' ! Controls what is output into the GPP stash variable\n                                      ! 'OFF' is true GPP (photosynthesis + leaf respiration)\n                                      ! 'ON' is only photosynthesis, canopy%fpn\n  cable_user%RUN_DIAG_LEVEL= 'BASIC'  ! Controls output from CABLE to standard out\n                                      ! choices are:\n                                      ! 'BASIC'\n                                      ! 'NONE'\n                                      ! 'zero' (in cable_explicit_driver - what does this do?)\n  cable_user%ssnow_POTEV = ''    ! Controls method used for soil evaporation\n                                 ! Choices are:\n                                 ! 'P-M' Penman_Monteith, otherwise defaults to\n                                 ! humidity deficit method\n!!--------------Test Switches--------------\n  cable_user%l_new_roughness_soil  = .FALSE.   ! for new soil roughness, E.Kowalczyk Mar14\n  cable_user%l_new_runoff_speed    = .FALSE.   ! for new increase in runoff speed, E.Kowalczyk Mar14\n  cable_user%l_new_reduce_soilevp  = .FALSE.   ! to reduce soil evaporation, E.Kowalczyk Mar14\n!!-----------------------------------------\n!\n  redistrb = .FALSE.  ! Turn on/off the hydraulic redistribution\n  wiltParam = 0.5     ! only used if hydraulic redistribution .true.\n  satuParam = 0.8     ! only used if hydraulic redistribution .true.\n!\n! CASA-CNP flags\n  l_casacnp = .true. ! redundant? actually controlled by icycle\n  icycle = 3 ! Controls whether CASA-CNP is run and for which species\n             ! Choices are:\n             ! 0 CASA-CNP not run\n             ! 1 Carbon only\n             ! 2 Carbon and nitrogen\n             ! 3 Carbon, nitrogen and phosphorus\n  l_laiFeedbk   = .TRUE.  ! using prognostic LAI\n  l_vcmaxFeedbk = .TRUE.  ! using prognostic Vcmax\n! filenames for CASA-CNP input files\n  casafile%cnpbiome='~/CABLE-AUX/core/biogeochem/pftlookup_csiro_v16_17tiles.csv' ! biome specific BGC parameters\n  casafile%phen='~/CABLE-AUX/core/biogeochem/modis_phenology_csiro.txt' ! phenology by latitude (modis derived)\n&amp;end\n</code></pre>"},{"location":"user_guide/inputs/cable_soilparm_nml/","title":"cable_soilparm.nml options","text":""},{"location":"user_guide/inputs/list_inputs/","title":"List of inputs","text":""},{"location":"user_guide/inputs/pft_params_nml/","title":"pft_params.nml options","text":""},{"location":"user_guide/inputs/pft_params_nml/#example-pft_paramsnml-file","title":"Example pft_params.nml file","text":"<pre><code>&amp;cable_pftparm\nvegin%desc='Evergreen Needleleaf', 'Evergreen Broadleaf', 'Deciduous Needleleaf', 'Deciduous Broadleaf',\n                    'Shrub', 'C3 Grassland', 'C4 Grassland', 'Tundra', 'C3 Cropland', 'C4 Cropland',\n                    'Wetland', 'empty', 'empty', 'Barren', 'Urban', 'Lakes', 'Ice',\nvegin%a1gs=6*9.000000,4.000000,9.000000,9.000000,4.000000,7*9.000000,\nvegin%alpha=6*0.200000,0.050000,0.200000,0.200000,0.050000,7*0.200000,\nvegin%canst1=17*0.100000,\nvegin%cfrd=6*0.015000,0.025000,0.015000,0.015000,0.025000,7*0.015000,\nvegin%clitt=20.000000,6.000000,10.000000,13.000000,2.000000,2.000000,0.300000,0.300000,0.000000,0.000000,2.000000,2.000000,5*0.000000,\nvegin%conkc0=17*0.000302,\nvegin%conko0=17*0.256000,\nvegin%convex=6*0.010000,0.800000,0.010000,0.010000,0.800000,7*0.010000,\nvegin%cplant1=200.000000,300.000000,200.000000,300.000000,159.000000,250.000000,250.000000,250.000000,150.000000,150.000000,250.000000,1.000000,0.100000,0.000000,1.000000,1.000000,0.000000,\nvegin%cplant2=10217.000000,16833.000000,5967.000000,12000.000000,5000.000000,12*0.000000,\nvegin%cplant3=876.000000,1443.000000,511.000000,1029.000000,500.000000,500.000000,500.000000,500.000000,607.000000,607.000000,500.000000,1.000000,0.100000,0.000000,1.000000,1.000000,0.000000,\nvegin%csoil1=184.000000,303.000000,107.000000,216.000000,100.000000,275.000000,275.000000,275.000000,149.000000,149.000000,275.000000,1.000000,0.100000,1.000000,1.000000,1.000000,1.000000,\nvegin%csoil2=367.000000,606.000000,214.000000,432.000000,250.000000,314.000000,314.000000,314.000000,300.000000,300.000000,314.000000,1.000000,0.100000,1.000000,1.000000,1.000000,1.000000,\nvegin%d0gs=17*1500.000000,\nvegin%ejmax=17*0.000000,\nvegin%ekc=17*59430.000000,\nvegin%eko=17*36000.000000,\nvegin%extkn=17*0.001000,\nvegin%frac4=6*0.000000,1.000000,0.000000,0.000000,1.000000,7*0.000000,\nvegin%froot1=0.050000,0.200000,0.200000,0.200000,0.200000,0.150000,11*0.000000,\nvegin%froot2=0.050000,0.200000,0.200000,0.200000,0.200000,0.150000,11*0.000000,\nvegin%froot3=0.050000,0.200000,0.200000,0.200000,0.200000,0.150000,11*0.000000,\nvegin%froot4=0.050000,0.200000,0.200000,0.200000,0.200000,0.150000,11*0.000000,\nvegin%froot5=0.050000,0.200000,0.200000,0.200000,0.200000,0.150000,11*0.000000,\nvegin%froot6=0.050000,0.200000,0.200000,0.200000,0.200000,0.150000,11*0.000000,\nvegin%g0=17*0.000000,\nvegin%g1=2.346064,4.114762,2.346064,4.447321,4.694803,5.248500,1.616178,2.222156,5.789377,1.616178,5.248500,5.248500,0.000000,5.248500,5.248500,5.248500,5.248500,\nvegin%gswmin=6*0.010000,0.040000,0.010000,0.010000,0.040000,7*0.010000,\nvegin%hc=17.000000,35.000000,15.500000,20.000000,0.600000,0.567000,0.567000,0.567000,0.550000,0.550000,0.567000,0.200000,6.017000,0.200000,0.200000,0.200000,0.200000,\nvegin%lai=4.0,5.0,0.0,0.0,0.0,0.2,11*0.0,\nvegin%length=0.055000,0.100000,0.040000,0.150000,0.100000,6*0.300000,0.030000,0.242000,0.030000,0.030000,0.030000,0.030000,\nvegin%ratecp1=17*1.000000,\nvegin%ratecp2=17*0.030000,\nvegin%ratecp3=17*0.140000,\nvegin%ratecs1=17*2.000000,\nvegin%ratecs2=17*0.500000,\nvegin%refl1=0.090000,0.090000,0.075000,0.090000,0.090000,0.110000,0.110000,0.075000,0.110000,0.110000,0.108000,0.055000,0.091000,0.238000,0.143000,0.143000,0.159000,\nvegin%refl2=0.300000,0.290000,0.300000,0.290000,0.300000,0.340000,0.340000,0.320000,0.340000,0.340000,0.343000,0.190000,0.310000,0.457000,0.275000,0.275000,0.305000,\nvegin%refl3=17*0.010000,\nvegin%taul1=0.090000,0.090000,0.075000,0.090000,0.090000,0.110000,0.110000,0.075000,0.110000,0.110000,0.075000,0.023000,0.059000,0.039000,0.023000,0.023000,0.026000,\nvegin%taul2=0.300000,0.290000,0.300000,0.290000,0.300000,0.340000,0.340000,0.320000,0.340000,0.340000,0.146000,0.198000,0.163000,0.189000,0.113000,0.113000,0.113000,\nvegin%taul3=17*0.010000,\nvegin%rootbeta=0.943000,0.962000,0.966000,0.961000,0.964000,0.943000,0.943000,0.943000,0.961000,0.961000,0.943000,0.975000,5*0.961000,\nvegin%rp20=3.000000,0.600000,3.000000,2.200000,1.000000,1.500000,2.800000,2.500000,1.500000,1.000000,1.500000,6*1.000000,\nvegin%rpcoef=17*0.083200,\nvegin%rs20=11*1.000000,0.000000,1.000000,0.000000,0.000000,0.000000,0.000000,\nvegin%shelrb=17*2.000000,\nvegin%tmaxvj=-10.000000,-10.000000,10.000000,15.000000,13*-10.000000,\nvegin%tminvj=-15.000000,-15.000000,5.000000,5.000000,13*-15.000000,\nvegin%vbeta=2.000000,2.000000,2.000000,2.000000,4.000000,4.000000,4.000000,4.000000,2.000000,2.000000,4.000000,4.000000,2.000000,4.000000,4.000000,4.000000,4.000000,\nvegin%vcmax=0.000040,0.000055,0.000040,0.000060,0.000040,0.000060,0.000010,0.000040,0.000080,0.000080,0.000060,0.000017,0.000001,0.000017,0.000017,0.000017,0.000017,\nvegin%vegcf=9.000000,14.000000,9.000000,8.000000,5.000000,7.000000,7.000000,5.000000,7.000000,1.000000,7.000000,6*1.000000,\nvegin%wai=1.000000,1.000000,1.000000,1.000000,13*0.000000,\nvegin%width=0.001000,0.050000,0.001000,0.080000,0.005000,6*0.010000,0.003000,0.015000,0.001000,0.001000,0.001000,0.001000,\nvegin%xalbnir=17*1.000000,\nvegin%xfang=0.010000,0.100000,0.010000,0.250000,0.010000,6*-0.300000,0.100000,5*0.000000,\nvegin%zr=1.800000,3.000000,2.000000,2.000000,2.500000,5*0.500000,1.800000,3.100000,3.000000,1.000000,1.000000,1.000000,1.000000,\n/\n</code></pre>"},{"location":"user_guide/inputs/pft_params_nml/#descriptive-table-of-parameters","title":"Descriptive table of parameters","text":"Namelist variable Type Available values Default values Description vegin%a1gs real &gt;=0.0 9, 9, 9, 9, 9, 9, 4, 9, 9, 4, 9, 9, 9, 9, 9, 9, 9 a1 parameter in stomatal conductance model. Represents the sensitivity of stomatal conductance to the assimilation rate \\( (-) \\) vegin%alpha real &gt;=0.0 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.05, 0.2, 0.2, 0.05, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 Initial slope of J-Q response curve \\( (mol (electrons) \\cdot mol^{-1} (photons) (C3) \\cdot mol (CO2) \\cdot mol^{-1} (photons) (C4)) \\) vegin%canst1 real 0.05 \u2013 0.15 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 Maximum intercepted water by canopy \\( (mm \\cdot LAI^{-1}) \\) vegin%cfrd real &gt;=0.0 0.015, 0.015, 0.015, 0.015, 0.015, 0.025, 0.015, 0.015, 0.025, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015 Ratio of day respiration to vcmax \\( (-) \\) vegin%clitt real &gt;=0.0 20, 6, 10, 13, 2, 2, 0.3, 0.3, 0, 0, 2, 2, 0, 0, 0, 0, 0 Leaf litter (alters resistance to soil evaporation) \\( (tC \\cdot ha^{-1}) \\) vegin%conkc0 real &gt;=0.0 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302, 0.000302 Michaelis-Menton constant for carboxylase \\( (bar) \\) vegin%conko0 real &gt;=0.0 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256 Michaelis-Menton constant for oxygenase \\( (bar) \\) vegin%convex real &gt;=0.0 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.8, 0.01, 0.01, 0.8, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01 Convexity of J-Q response curve \\( (-) \\) vegin%cplant1 real &gt;=0.0 200, 300, 200, 300, 159, 250, 250, 250, 150, 150, 250, 1, 0.1, 0, 1, 1, 0 Plant carbon in 1st vegetation carbon store \\( (gC \\cdot m^{-2}) \\) vegin%cplant2 real &gt;=0.0 10217, 16833, 5967, 12000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Plant carbon in 2nd vegetation carbon store \\( (gC \\cdot m^{-2}) \\) vegin%cplant3 real &gt;=0.0 876, 1443, 511, 1029, 500, 500, 500, 500, 607, 607, 500, 1, 0.1, 0, 1, 1, 0 Plant carbon in 3rd vegetation carbon store \\( (gC \\cdot m^{-2}) \\) vegin%csoil1 real &gt;=0.0 184, 303, 107, 216, 100, 275, 275, 275, 149, 149, 275, 1, 0.1, 1, 1, 1, 1 Soil carbon in 1st soil carbon store \\( (gC \\cdot m^{-2}) \\) vegin%csoil2 real &gt;=0.0 367, 606, 214, 432, 250, 314, 314, 314, 300, 300, 314, 1, 0.1, 1, 1, 1, 1 Soil carbon in 2nd soil carbon store \\( (gC \\cdot m^{-2}) \\) vegin%d0gs real &gt;=0.0 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500 d0 in stomatal conductance model \\( (kPa) \\) vegin%desc character 'Evergreen Needleleaf', 'Evergreen Broadleaf', 'Deciduous Needleleaf', 'Deciduous Broadleaf', 'Shrub', 'C3 Grassland', 'C4 Grassland',  'Tundra', 'C3 Cropland', 'C4 Cropland', 'Wetland', 'empty', 'empty', 'Barren', 'Urban', 'Lakes', 'Ice' Description of plant functional type vegin%ejmax real 0 \u2013 3.0E-4 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Maximum potential electron transp rate top leaf \\( (mol \\cdot m^{-2} \\cdot s^{-1}) \\) vegin%ekc real &gt;=0.0 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430, 59430 Activation energy for carboxylase \\( (J \\cdot mol^{-1}) \\) vegin%eko real &gt;=0.0 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000, 36000 Activation energy for oxygenase \\( (J \\cdot mol^{-1}) \\) vegin%extkn real 0.0 \u2013 10.0 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001 Extinction coeficient for vertical profile of N \\( (-) \\) vegin%frac4 real 0.0 \u2013 1.0 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 Fraction of c4 plants \\( (-) \\) vegin%froot1 real 0.0 \u2013 1.0 0.05, 0.2, 0.2, 0.2, 0.2, 0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Fraction of root in soil layer 1 \\( (-) \\) vegin%froot2 real 0.0 \u2013 1.0 0.05, 0.2, 0.2, 0.2, 0.2, 0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Fraction of root in soil layer 2 \\( (-) \\) vegin%froot3 real 0.0 \u2013 1.0 0.05, 0.2, 0.2, 0.2, 0.2, 0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Fraction of root in soil layer 3 \\( (-) \\) vegin%froot4 real 0.0 \u2013 1.0 0.05, 0.2, 0.2, 0.2, 0.2, 0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Fraction of root in soil layer 4 \\( (-) \\) vegin%froot5 real 0.0 \u2013 1.0 0.05, 0.2, 0.2, 0.2, 0.2, 0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Fraction of root in soil layer 5 \\( (-) \\) vegin%froot6 real 0.0 \u2013 1.0 0.05, 0.2, 0.2, 0.2, 0.2, 0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Fraction of root in soil layer 6 \\( (-) \\) vegin%g0 real -0.5 \u2013 0.5 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Belinda's stomatal model intercept. Residual stomatal conductance as net assimilation rate reaches zero \\( (mol \\cdot m^{-2} \\cdot s^{-1}) \\) vegin%g1 real 0.0 \u2013 20.0 2.346064, 4.114762, 2.346064, 4.447321, 4.694803, 5.2485, 1.616178, 2.222156, 5.789377, 1.616178, 5.2485, 5.2485, 0, 5.2485, 5.2485, 5.2485, 5.2485 Belinda's stomatal model slope. Sensitivity of stomatal conductance to the assimilation rate \\( (kPa) \\) vegin%gswmin real &gt;=0.0 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.04, 0.01, 0.01, 0.04, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01 Minimal stomatal conductance \\( (mol \\cdot m^{-2} \\cdot s^{-1}) \\) vegin%hc real 0.0 \u2013 100.0 17, 35, 15.5, 20, 0.6, 0.567, 0.567, 0.567, 0.55, 0.55, 0.567, 0.2, 6.017, 0.2, 0.2, 0.2, 0.2 Roughness height of canopy (veg - snow) \\( (m) \\) vegin%lai real 0.0 \u2013 8.0 4, 5, 0, 0, 0, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Leaf area index of each plant functional type \\( (-) or (m^{2} \\cdot m^{-2} ) \\) vegin%length real &gt;=0.0 0.055, 0.1, 0.04, 0.15, 0.1, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.03, 0.242, 0.03, 0.03, 0.03, 0.03 Leaf length \\( (m) \\) vegin%ratecp1 real 0.01 \u2013 3.0 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 Plant carbon pool rate constant in 1st vegetation carbon store \\( (year^{-1}) \\) vegin%ratecp2 real 0.01 \u2013 3.0 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03 Plant carbon pool rate constant in 2nd vegetation carbon store  \\( (year^{-1}) \\) vegin%ratecp3 real 0.01 \u2013 3.0 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14 Plant carbon pool rate constant in 3rd vegetation carbon store  \\( (year^{-1}) \\) vegin%ratecs1 real 0.01 \u2013 3.0 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 Soil carbon pool rate constant in 1st soil carbon store \\( (year^{-1}) \\) vegin%ratecs2 real 0.01 \u2013 3.0 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 Soil carbon pool rate constant in 2nd soil carbon store \\( (year^{-1}) \\) vegin%refl1 real 0.0 \u2013 0.5 0.09, 0.09, 0.075, 0.09, 0.09, 0.11, 0.11, 0.075, 0.11, 0.11, 0.108, 0.055, 0.091, 0.238, 0.143, 0.143, 0.159 Leaf reflectance in 1st radiation band \\( (-) \\) vegin%refl2 real 0.0 \u2013 0.5 0.3, 0.29, 0.3, 0.29, 0.3, 0.34, 0.34, 0.32, 0.34, 0.34, 0.343, 0.19, 0.31, 0.457, 0.275, 0.275, 0.305 Leaf reflectance in 2nd radiation band \\( (-) \\) vegin%refl3 real 0.0 \u2013 0.5 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01 Leaf reflectance in 3rd radiation band \\( (-) \\) vegin%rootbeta real 0.0 \u2013 1.0 0.943, 0.962, 0.966, 0.961, 0.964, 0.943, 0.943, 0.943, 0.961, 0.961, 0.943, 0.975, 0.961, 0.961, 0.961, 0.961, 0.961 Beta parameter to calculate froot (Jackson et al. 1996) \\( (-) \\) vegin%rp20 real 0.0 \u2013 10.0 3, 0.6, 3, 2.2, 1, 1.5, 2.8, 2.5, 1.5, 1, 1.5, 1, 1, 1, 1, 1, 1 Plant respiration coefficient at 20 C \\( (-) \\) vegin%rpcoef real 0.05 \u2013 1.5 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832 Temperature coefficient non-leaf plant respiration \\( (^{\\circ}C^{-1}) \\) vegin%rs20 real 0.0 \u2013 10.0 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0 Soil respiration at 20 C \\( (mol \\cdot m^{-2} \\cdot s^{-1} ) \\) vegin%shelrb real 1.0 \u2013 3.0 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 Sheltering factor \\( (-) \\) vegin%taul1 real 0.0 \u2013 0.3 0.09, 0.09, 0.075, 0.09, 0.09, 0.11, 0.11, 0.075, 0.11, 0.11, 0.075, 0.023, 0.059, 0.039, 0.023, 0.023, 0.026 Leaf transmittance in 1st radiation band \\( (-) \\) vegin%taul2 real 0.0 \u2013 0.3 0.3, 0.29, 0.3, 0.29, 0.3, 0.34, 0.34, 0.32, 0.34, 0.34, 0.146, 0.198, 0.163, 0.189, 0.113, 0.113, 0.113 Leaf transmittance in 2nd radiation band \\( (-) \\) vegin%taul3 real 0.0 \u2013 0.3 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01 Leaf transmittance in 3rd radiation band \\( (-) \\) vegin%tmaxvj real -15.0 \u2013 30.0 -10, -10, 10, 15, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10 Maximum temperature of the start of photosynthesis \\( (^{\\circ}C) \\) vegin%tminvj real -20.0 \u2013 15.0 -15, -15, 5, 5, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15 Minimum temperature of the start of photosynthesis \\( (^{\\circ}C) \\) vegin%vbeta real -999999 \u2013 999999 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 4, 4, 2, 4, 4, 4, 4 Stomatal sensitivity to soil water \\( (-) \\) vegin%vcmax real 5.0E-6 \u2013 1.5E-4 4E-05, 5.5E-05, 4E-05, 6E-05, 4E-05, 6E-05, 1E-05, 4E-05, 8E-05, 8E-05, 6E-05, 1.7E-05, 1E-06, 1.7E-05, 1.7E-05, 1.7E-05, 1.7E-05 Maximum RuBP carboxylation rate top leaf \\( ( mol \\cdot m^{-2} \\cdot s^{-1} ) \\) vegin%vegcf real 0.0 \u2013 100.0 9, 14, 9, 8, 5, 7, 7, 5, 7, 1, 7, 1, 1, 1, 1, 1, 1 Scaling on soil respiration (place-holder scheme) \\( (-) \\) vegin%width real &gt;=0.0 0.001, 0.05, 0.001, 0.08, 0.005, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.003, 0.015, 0.001, 0.001, 0.001, 0.001 Leaf width \\( (m) \\) vegin%xfang real -1.0 \u2013 0.5 0.01, 0.1, 0.01, 0.25, 0.01, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, 0.1, 0, 0, 0, 0, 0 Leaf angle \\( (-) \\) vegin%zr real &gt;=0.0 1.8, 3, 2, 2, 2.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.8, 3.1, 3, 1, 1, 1, 1 Maximum rooting depth \\( (cm) \\)"},{"location":"user_guide/inputs/pft_params_nml/#unused-parameters","title":"Unused parameters","text":"Name Type Available Default Description vegin%cplant real &gt;=0.0 ? Plant carbon in 1st vegetation carbon store, now split into <code>cplant1-3</code> \\( (gC \\cdot m^{-2}) \\) vegin%csoil real &gt;=0.0 ? Soil carbon in 1st soil carbon store, now split into <code>csoil1-2</code> \\( (gC \\cdot m^{-2}) \\) vegin%dleaf real 0.005 \u2013 0.4 ? Characteristic length of leaf (not used) \\( (m) \\) vegin%froot real 0.0 \u2013 1.0 ? Root fraction, now split into <code>froot1-6</code> (not used) \\( (-) \\) vegin%ratecp real 0.01 \u2013 3.0 ? Plant carbon pool rate constant in 1st vegetation carbon store, now split into <code>ratecp1-3</code> \\( (year^{-1}) \\) vegin%ratecs real 0.01 \u2013 3.0 ? Soil carbon pool rate constant in 1st soil carbon store, now split into <code>ratecs1-3</code> \\( (year^{-1}) \\) vegin%refl real 0.0 \u2013 0.5 ? Leaf reflectance in 1st radiation band, now split into <code>refl1-3</code> \\( (-) \\) vegin%taul1 real 0.0 \u2013 0.3 ? Leaf transmittance in 1st radiation band, now split into <code>tau1-3</code> \\( (-) \\) vegin%wai real 0.0 \u2013 5.0 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 Wood area index (stem+branches+twigs) (not used) \\( (-) \\) vegin%xalbnir real 0.0 \u2013 1.5 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ? (not used)"},{"location":"user_guide/inputs/precedence/","title":"Precedence rules for inputs","text":""},{"location":"user_guide/obsolete_and_deprecated_features/obsolete_and_deprecated_features/","title":"Obsolete and deprecated features for CABLE users","text":"<p>The obsolete user features described here were at some point valid in previous versions of CABLE before they became deprecated and were subsequently removed from the code. Attempts to use such features in runs of current versions of CABLE should result in general in an error message. Usage of the deprecated user features described here is discouraged as they are scheduled to become obsolete and removed from future versions of CABLE. Attempts to use such features in runs of current versions of CABLE should result in general in a warning message.</p> <p>Other content of potential interest: obsolete and deprecated developer features</p>"},{"location":"user_guide/obsolete_and_deprecated_features/obsolete_and_deprecated_features/#obsolete-user-features","title":"Obsolete user features","text":"<p>Enter obsolete user features in the table below:</p> Feature name  Removal reason  Replacement? CABLE version Pull Request Namelist variable <code>filename%veg</code> Now uses namelist file <code>pft_params.nml</code> <code>pft_params.nml</code> CABLE3 N/A Namelist variable <code>filename%soil</code> Now uses namelist file <code>cable_soilparm.nml</code> <code>cable_soilparm</code> CABLE3 N/A exact feature syntax short deprecation reason current alternative if any version number #pull request number"},{"location":"user_guide/obsolete_and_deprecated_features/obsolete_and_deprecated_features/#deprecated-user-features","title":"Deprecated user features","text":"<p>Enter deprecated user features in the table below:</p> Feature name  Deprecation reason  Replacement? CABLE version Pull Request exact feature syntax short deprecation reason current alternative if any version number #pull request number exact feature syntax short deprecation reason current alternative if any version number #pull request number"},{"location":"user_guide/outputs/","title":"Outputs","text":""},{"location":"user_guide/science/CASA/","title":"CASA","text":""},{"location":"user_guide/science/canopy/","title":"Canopy","text":""},{"location":"user_guide/science/groundwater/","title":"Groundwater","text":""},{"location":"user_guide/science/radiation/","title":"Radiation","text":""},{"location":"user_guide/science/snow/","title":"Snow","text":""},{"location":"user_guide/science/soil/","title":"Soil","text":""},{"location":"user_guide/tutorial/configuration_desc/","title":"Understand the configuration","text":""},{"location":"user_guide/tutorial/run_cable/","title":"Run an experiment","text":""}]}